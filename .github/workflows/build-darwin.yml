name: Build Darwin
on:
  workflow_call:
    inputs:
      version_file:
        type: string
        required: true
      macos_version:
        type: string
        required: true
      xcode_version:
        type: string
        required: true
      version:
        type: string
        required: true
      prefix:
        type: string
        required: true
      suffix:
        type: string
        required: true

env:
  GOPRIVATE: github.com/getlantern
  S3_BUCKET: lantern
jobs:
  build-darwin:
    permissions:
      contents: "read"
      id-token: "write"
    env:
      version: ${{ inputs.version }}
      version_file: ${{ inputs.version_file }}
      prefix: ${{ inputs.prefix }}
      suffix: ${{ inputs.suffix }}
      AC_USERNAME: accounts@getlantern.org
      AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
    runs-on: ${{ inputs.macos_version }}
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: Pull LFS objects
      run: git lfs pull

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version-file: "go.mod"

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ inputs.xcode_version }}

    - name: Granting private modules access
      run: |
        git config --global url."https://${{ secrets.GH_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

    - name: Repo access
      run: |
        mkdir /tmp/cache
        echo "machine github.com login ${{ secrets.GH_TOKEN }} password x-oauth-basic" > /tmp/cache/.netrc
        chmod 600 /tmp/cache/.netrc

    - name: Setup Sentry CLI
      uses: mathieu-bour/setup-sentry-cli@v1
      with:
        version: latest
        token: ${{ SECRETS.SENTRY_TOKEN }} # from GitHub secrets
        organization: getlantern
        project: android

    - name: Build liblantern.dylib
      run: make darwin

    - uses: actions/upload-artifact@v4
      with:
        name: "libgo-${{ env.suffix }}-build"
        if-no-files-found: error
        path: |
          liblantern.dylib

      # Install Flutter
    - uses: subosito/flutter-action@v2
      with:
        channel: "stable"

    - run: flutter --version

    - run: make ffigen

    - name: Setup protoc
      uses: arduino/setup-protoc@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Activate protoc-gen-dart plugin
      run: |
        dart pub global activate protoc_plugin

    - run: touch app.env

    - name: Build Flutter app
      run: flutter build macos --release

    - uses: actions/setup-node@v4
      with:
        node-version: latest

    - name: Install darwin installer dependencies
      run: |
        npm install -g appdmg
        brew tap joshdk/tap
        brew install joshdk/tap/retry
        brew install imagemagick

    - name: Build darwin installer
      run: |
        echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
        security create-keychain -p temporaty-password build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p temporaty-password build.keychain
        security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k temporaty-password build.keychain
        make package-darwin
      env:
        VERSION: "${{ env.version }}"
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERT }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERT_PASS }}

    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install s3cmd
      run: pip install s3cmd

    - name: Set s3cmd permissions
      run: |
        echo "[default]" > "$HOME/.s3cfg"
        echo "access_key = ${{ secrets.AWS_ACCESS_KEY }}" >> "$HOME/.s3cfg"
        echo "secret_key = ${{ secrets.AWS_SECRET_KEY }}" >> "$HOME/.s3cfg"

    - name: Rename build
      env:
        DMG: "${{ env.prefix }}-${{ env.version }}-${{ env.suffix}}.dmg"
      run: |
        mv lantern-installer.dmg "$DMG"
        cp "$DMG" "lantern-installer-${{ env.suffix }}.dmg"

    - uses: actions/upload-artifact@v4
      with:
        name: "${{ env.suffix}}-build"
        retention-days: 2
        path: |
          lantern-installer-${{ env.suffix }}.dmg

    - name: Push binaries to s3
      env:
        VERSION: "${{ env.version }}"
        DMG: "${{ env.prefix }}-${{ env.version }}-${{ env.suffix}}.dmg"
      run: |
        cp "$DMG" ${{ env.prefix }}-${{ env.suffix }}.dmg
        echo ${{ env.version }} > ${{ env.version_file }}
        shasum -a 256 "$DMG" | cut -d " " -f 1 > "$DMG".sha256
        cp "$DMG".sha256 ${{ env.prefix }}-${{ env.suffix }}.dmg.sha256
        s3cmd put --acl-public "$DMG" ${{ env.version_file }} "$DMG".sha256 ${{ env.prefix }}-${{ env.suffix }}.dmg.sha256 ${{ env.prefix }}-${{ env.suffix }}.dmg "s3://lantern"