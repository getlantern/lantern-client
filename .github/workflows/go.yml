name: Go Build and Test

on:
  push:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install libpcap
      run: sudo apt-get install libpcap-dev

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: "go.mod"

    - name: Granting private modules access
      run: |
          git config --global url."https://${{ secrets.CI_PRIVATE_REPOS_GH_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

    - name: Setup protoc
      uses: arduino/setup-protoc@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install latest protoc-gen-go
      run: go install github.com/golang/protobuf/protoc-gen-go@latest

    - name: Build
      run: LIB_NAME=liblantern.so make lantern

    # Install gotestfmt on the VM running the action.
    - name: Set up gotestfmt
      uses: GoTestTools/gotestfmt-action@v2
      with:
        # Optional: pass GITHUB_TOKEN to avoid rate limiting.
        token: ${{ secrets.GITHUB_TOKEN }}

    # Run tests with nice formatting. Save the original log in /tmp/gotest.log
    - name: Run tests
      run: |
        set -euo pipefail
        go test -json -failfast -tags="headless,integration" -coverprofile=profile.cov -v ./... 2>&1 | tee /tmp/gotest.log | gotestfmt -nofail

      # Upload the original go test log as an artifact for later review.
    - name: Upload test log
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-log
        path: /tmp/gotest.log
        if-no-files-found: error

    - name: Install goveralls
      run: go install github.com/mattn/goveralls@latest
    - name: Send coverage
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: goveralls -coverprofile=profile.cov -service=github
