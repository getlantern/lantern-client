name: android

on: push

permissions:
  contents: read

env:
  GOPRIVATE: github.com/getlantern
jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
    - id: set-version
      shell: python
      run: |
        import sys, os
        ref = os.environ.get("GITHUB_REF","")
        if "refs/tags/lantern" not in ref:
          li = 'lantern-installer-dev'
          vf = 'version-dev.txt'
          version = '9999.99.99-dev'
        else:
          a = ref.strip().replace('refs/tags/lantern-', '')
          parts = a.split('-',1)
          suffix = parts[1] if len(parts)>1 else ''
          beta = 'beta' in suffix
          internal = 'internal' in suffix
          if beta:
              li = 'lantern-installer-preview'
              vf = 'version-beta.txt'
              version = parts[0]
          elif internal:
              li = 'lantern-installer-internal'
              vf = 'version-internal.txt'
              version = parts[0]
          else:
              li = 'lantern-installer'
              vf = 'version.txt'
              version = a
        print('Setting version to ' + version)
        print('Setting prefix to ' + li)
        print('Setting version file to ' + vf)
        print(f'::set-output name=version::{version}')
        print(f'::set-output name=prefix::{li}')
        print(f'::set-output name=version_file::{vf}')
  build:
    needs: set-version
    runs-on: ubuntu-latest-8-cores
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: Pull LFS objects
      run: git lfs pull

    # Install Flutter
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: "3.10.5"
        channel: "stable"
    - run: flutter --version

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Granting private modules access
      run: |
        git config --global url."https://${{ secrets.GH_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

    - name: Build Lantern core Android library
      run: make android-lib

    - name: Setup Sentry CLI
      uses: mathieu-bour/setup-sentry-cli@v1
      with:
        version: latest
        token: ${{ SECRETS.SENTRY_TOKEN }} # from GitHub secrets
        organization: getlantern
        project: android

    - name: Setup JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11

    - name: Setup protoc
      uses: arduino/setup-protoc@v1.2.0
      with:
        version: '3.x'

    - name: Activate protoc-gen-dart plugin
      run: |
        echo "${HOME}/.pub-cache/bin" >> $GITHUB_PATH
        dart pub global activate protoc_plugin
        mkdir -p "${HOME}/.pub-cache/bin"
        mv "${FLUTTER_ROOT}/.pub-cache/bin/protoc-gen-dart" "${HOME}/.pub-cache/bin"

    - name: Set gradle properties
      env:
        GRADLE_PROPERTIES: ${{ secrets.GRADLE_PROPERTIES }}
      run: |
        mkdir -p ~/.gradle/
        echo "GRADLE_USER_HOME=${HOME}/.gradle" >> $GITHUB_ENV
        echo "${GRADLE_PROPERTIES}" > ~/.gradle/gradle.properties

    - name: Decode Keystore
      id: write_file
      uses: timheuer/base64-to-file@v1.2
      with:
        fileName: 'keystore.release.jks'
        fileDir: './android/app'
        encodedString: ${{ secrets.KEYSTORE }}

    - name: Build Release with Gradle
      run: make android-release

    - name: Build Mobile Bundle
      run: make android-bundle ANDROID_ARCH=all

    - name: Setup S3cmd cli tool
      uses: s3-actions/s3cmd@v1.4.0
      with:
        provider: aws
        region: ${{ secrets.AWS_REGION }}
        access_key: ${{ secrets.AWS_ACCESS_KEY }}
        secret_key: ${{ secrets.AWS_SECRET_KEY }}

    - name: Upload to S3 (QA)
      if: ${{ !startsWith(github.ref, 'refs/tags/lantern') }}
      env:
        VERSION: ${{ needs.set-version.outputs.version }}
      run: make release-qa

    - name: Upload to S3 (Prod)
      if: startsWith(github.ref, 'refs/tags/lantern')
      env:
        VERSION: ${{ needs.set-version.outputs.version }}
      run: make release-prod

    - name: Upload Android Release to Play Store Alpha track
      if: startsWith(github.ref, 'refs/tags/lantern')
      uses: r0adkll/upload-google-play@v1
      with:
       serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
       packageName: org.getlantern.lantern
       releaseFiles: lantern-installer-internal.aab
       track: alpha
