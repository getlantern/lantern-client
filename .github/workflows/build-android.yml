name: Build Android Installer
on:
  workflow_call:
    inputs:
      version_file:
        type: string
        required: true
      version:
        type: string
        required: true
      prefix:
        type: string
        required: true

env:
  GOPRIVATE: github.com/getlantern
  S3_BUCKET: lantern

jobs:
  build-android:
    env:
      version: ${{ inputs.version }}
      version_file: ${{ inputs.version_file }}
      prefix: ${{ inputs.prefix }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Pull LFS objects
        run: git lfs pull

      - name: Installing Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Install latest protoc-gen-go
        run: go install github.com/golang/protobuf/protoc-gen-go@latest

      - name: Granting private modules access
        run: |
          git config --global url."https://${{ secrets.CI_PRIVATE_REPOS_GH_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Setup Sentry CLI
        uses: mathieu-bour/setup-sentry-cli@v2
        with:
          version: latest
          token: ${{ SECRETS.SENTRY_TOKEN }} # from GitHub secrets
          organization: getlantern
          project: android

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: 'gradle'

      - name: Setup protoc
        uses: arduino/setup-protoc@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Activate protoc-gen-dart plugin
        run: |
          echo "${HOME}/.pub-cache/bin" >> $GITHUB_PATH
          dart pub global activate protoc_plugin

      - name: Set gradle properties
        env:
          GRADLE_PROPERTIES: ${{ secrets.GRADLE_PROPERTIES }}
        run: |
          mkdir -p ~/.gradle/
          echo "GRADLE_USER_HOME=${HOME}/.gradle" >> $GITHUB_ENV
          echo "${GRADLE_PROPERTIES}" > ~/.gradle/gradle.properties

      - name: Decode Keystore
        id: write_file
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'keystore.release.jks'
          fileDir: './android/app'
          encodedString: ${{ secrets.KEYSTORE }}

      - name: Generate app.env
        env:
          ANDROID_INTERSTITIAL_AD_ID: ${{ secrets.INTERSTITIAL_AD_UNIT_ID }}
          IOS_INTERSTITIAL_AD_ID: ${{ secrets.INTERSTITIAL_AD_UNIT_ID_IOS }}
        run: |
          touch app.env
          echo "Android_interstitialAd=$ANDROID_INTERSTITIAL_AD_ID" > app.env
          echo "IOS_interstitialAd=$IOS_INTERSTITIAL_AD_ID" >> app.env


      - name: Clean packages to save disk space
        run: |
          sudo apt-get autoremove -y
          sudo apt-get clean
          sudo apt-get autoclean
          sudo apt-get remove --purge $(dpkg --list | grep '^rc' | awk '{print $2}')

      - name: Build Android installers
        env:
          INTERSTITIAL_AD_UNIT: "${{ secrets.INTERSTITIAL_AD_UNIT_ID }}"
          SENTRY_AUTH_TOKEN: "${{ secrets.SENTRY_AUTH_TOKEN }}"
          VERSION: "${{ env.version }}"
        run: make package-android

      - name: Clean Go module and build cache
        run: |
          go clean -modcache
          go clean -cache -testcache

      - name: Clean up disk space
        run: |
          df -h  # Check disk space
          sudo apt-get clean
          sudo apt-get autoremove
          sudo rm -rf /tmp/*
          sudo rm -rf /var/cache/*
          df -h

      - name: Delete Gradle cache
        run: |
          sudo rm -rf $HOME/.gradle/caches
          echo "Gradle cache deleted successfully"

      - uses: actions/upload-artifact@v4
        with:
          name: android-apk-build
          retention-days: 2
          path: |
            lantern-installer.apk

      - uses: actions/upload-artifact@v4
        with:
          name: android-aab-build
          retention-days: 2
          path: |
            lantern-installer.aab

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install s3cmd
        run: pip install s3cmd

      - name: Set s3cmd permissions
        run: |
          echo "[default]" > "$HOME/.s3cfg"
          echo "access_key = ${{ secrets.AWS_ACCESS_KEY }}" >> "$HOME/.s3cfg"
          echo "secret_key = ${{ secrets.AWS_SECRET_KEY }}" >> "$HOME/.s3cfg"

      - name: Push binaries to s3
        env:
          VERSION: "${{ env.version }}"
          APK: "${{ env.prefix }}-${{ env.version }}.apk"
          AAB: "${{ env.prefix }}-${{ env.version }}.aab"
          update: "lantern_update_android_arm-${{inputs.version}}.bz2"
          update_source: lantern_update_android_arm.bz2
        run: |
          mv ${{ env.update_source }} ${{ env.update }}
          mv lantern-installer.apk "$APK"
          mv lantern-installer.aab "$AAB"
          cp "$APK" ${{ env.prefix }}.apk
          cp "$AAB" ${{ env.prefix }}.aab
          echo ${{ env.version }} > ${{ env.version_file }}
          shasum -a 256 "$APK" | cut -d " " -f 1 > "$APK".sha256
          shasum -a 256 "$AAB" | cut -d " " -f 1 > "$AAB".sha256
          shasum -a 256 ${{ env.update }} | cut -d " " -f 1 > ${{ env.update }}.sha256
          cp "$APK".sha256 ${{ env.prefix }}.apk.sha256
          cp "$AAB".sha256 ${{ env.prefix }}.aab.sha256
          s3cmd put --acl-public "$APK" "$APK".sha256 ${{ env.update }} ${{ env.update }}.sha256 ${{ env.version_file }} ${{ env.prefix }}.apk.sha256 ${{ env.prefix }}.apk "s3://$S3_BUCKET"
          s3cmd put --acl-public "$AAB" "$AAB".sha256 ${{ env.prefix }}.aab.sha256 ${{ env.prefix }}.aab "s3://$S3_BUCKET"
          s3cmd modify --add-header='content-type':'application/vnd.android.package-archive' "s3://$S3_BUCKET/$APK"
          s3cmd modify --add-header='content-type':'application/vnd.android.package-archive' "s3://$S3_BUCKET/${{ env.prefix }}.apk"
          s3cmd modify --add-header='content-type':'application/vnd.android.package-archive' "s3://$S3_BUCKET/$AAB"
          s3cmd modify --add-header='content-type':'application/vnd.android.package-archive' "s3://$S3_BUCKET/${{ env.prefix }}.aab"

