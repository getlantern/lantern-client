syntax = "proto3";
option go_package = "/protos";

// POST /users/signup
message SignupRequest {
  string email = 1;
  bytes salt = 2;
  bytes verifier = 3;
  bool skip_email_confirmation = 4;
}


message EmptyResponse{}


// POST /users/signup/resend/email
message SignupEmailResendRequest {
  string email = 1;
  bytes salt = 2;
}

// POST /users/signup/complete/email
message ConfirmSignupRequest {
  string email = 1;
  string code = 2;
}

// GET /users/salt
message GetSaltResponse {
  bytes salt = 1;
}

// POST /users/prepare
message PrepareRequest {
  string email = 1;
  bytes a = 2;
}

message PrepareResponse {
  bytes b = 1;
  bytes proof = 2;
}

// POST /users/login
message LoginRequest {
  string email = 1;
  bytes proof = 2;
  string deviceId = 3;
}

message LoginResponse {
  int64 legacyID = 1;
  string legacyToken = 2;
  string id = 3;
  bool emailConfirmed = 4;
  message Device {
    string id = 1;
    string name = 2;
    int64 created = 3;
  }
  message UserData {
    int64 userId = 1;
    string code = 2;
    string token = 3;
    string referral = 4;
    string phone = 5;
    string email = 6;
    string userStatus = 7;
    string userLevel = 8;
    string locale = 9;
    int64 expiration = 10;
    repeated string servers = 11;
    string subscription = 12;
    repeated string purchases = 13;
    string bonusDays = 14;
    string bonusMonths = 15;
    repeated string inviters = 16;
    repeated string invitees = 17;
    repeated Device devices = 18;
    bool yinbiEnabled = 19;
  }
  bool Success = 5;
  // this maps to /user-data call in pro-server and is returned only on successful login
  UserData legacyUserData = 6;
  // list of current user devices. returned only on successful login that is blocked by 'too many devices'
  repeated Device devices = 7;
}


// POST /users/recovery/start/email
message StartRecoveryByEmailRequest {
  string email = 1;
}

// POST /users/recovery/complete/email
message CompleteRecoveryByEmailRequest {
  string email = 1;
  string code = 2;
  bytes new_salt = 3;
  bytes new_verifier = 4;
}

// POST /users/change_email
message ChangeEmailRequest {
  string old_email = 1;
  string new_email = 2;
  bytes proof = 3;
}

// POST /users/change_email/complete/email
message CompleteChangeEmailRequest {
  string old_email = 1;
  string new_email = 2;
  string code = 3;
  bytes new_salt = 4;
  bytes new_verifier = 5;
}


// POST /users/delete
message DeleteUserRequest {
  string email = 1;
  bool permanent = 2;
  bytes proof = 3;
  string deviceId = 4;
}

// POST /users/recovery/validate/email
message ValidateRecoveryCodeRequest {
  string email = 1;
  string code = 2;
}

message ValidateRecoveryCodeResponse {
  bool valid = 1;
}


// POST /users/logout
message LogoutRequest {
  string email = 1;
  string deviceId = 2;
  int64 legacyUserID = 3;
  string legacyToken = 4;
}
