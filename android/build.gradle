buildscript {
    ext.kotlin_version = '2.0.20'
    ext.signal_version = '2.8.1'
    ext.protoc_version = '4.26.1'
    ext.desugarJdk     = '2.0.4'
    ext.tapsellVersion = '1.0.1-beta07'

    repositories {
        google()
        mavenCentral()
        maven { url 'https://maven.google.com' }
        maven { url 'https://jitpack.io' }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath 'com.android.tools.build:gradle:8.7.0'
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.9.1"
        classpath("org.jlleitschuh.gradle:ktlint-gradle:11.3.1")
    }
}

ext {
    commonPlugins = new File(projectDir, 'common-plugins.gradle')
    internalScript = new File(projectDir, 'internal.gradle')

    enableTestCodeCoverage = true

    compileSdkVersion = 34
    targetSdkVersion = 34
    minSdkVersion = 23
    buildToolsVersion = '34.0.0'
    buildNumber = 'dev'
    espressoVersion = '3.5.0'
    supportTestVersion = '1.0'

    lanternDir = projectDir.parentFile.parentFile
    qualityScript = new File(lanternDir, 'quality.gradle')
    deployScript = new File(lanternDir, 'deploy.gradle')

    libs = fileTree(dir: 'libs', include: ['*.jar'])
    mavenAntTasks = 'org.apache.maven:maven-ant-tasks:2.1.3'
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    /// TODO: remove. hotfix for flutter_inappwebview (using androidx.webkit:webkit:1.8.0)
    /// webview_flutter_android: ^3.16.2 androidx.webkit:webkit ^1.9.0 remove SUPPRESS_ERROR_PAGE
    configurations.all {
        resolutionStrategy {
            force 'androidx.webkit:webkit:1.8.0'
        }
    }

    // This code fixes a 'namespace not specified' error upgrading AGP to >= 8.x.x.
    subprojects { subproject ->
        subproject.tasks.whenTaskAdded {
            if (it.name.contains("kapt")) {
                it.enabled = false
            }
        }
        afterEvaluate { project ->
            if (project.hasProperty('android')) {
                project.android {
                  if (namespace == null) {
                        namespace project.group
                    }
                }
            }
        }
    }

    apply plugin: "org.jlleitschuh.gradle.ktlint"
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
