buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.5.2"
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.9.4"
    }
}

ext {
    signal_version = '2.8.1'
    protoc_version = '4.26.1'
    desugarJdk = '2.1.5'

    enableTestCodeCoverage = true

    compileSdkVersion = 35
    targetSdkVersion = 35
    minSdkVersion = 24
    buildToolsVersion = '34.0.0'
    buildNumber = 'dev'
    espressoVersion = '3.5.0'
    supportTestVersion = '1.0'

    lanternDir = projectDir.parentFile.parentFile
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    // This code fixes a 'namespace not specified' error upgrading AGP to >= 8.x.x.
    subprojects { subproject ->
        subproject.tasks.whenTaskAdded {
            if (it.name.contains("kapt")) {
                it.enabled = false
            }
        }
        afterEvaluate { project ->
            if (project.hasProperty('android')) {
                project.android {
                  if (namespace == null) {
                        namespace project.group
                    }
                }
            }
        }
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

// Workaround for AGP 8.6+ defaultProguardFile ordering with R8
subprojects { sp ->
    if (sp.path != ':app') {
        sp.afterEvaluate {
            tasks.matching { t -> t.name.startsWith('minify') && t.name.endsWith('WithR8') }
                 .configureEach {
                     dependsOn(':app:extractProguardFiles')
                     mustRunAfter(':app:extractProguardFiles')
                 }
        }
    }
}

subprojects { p ->
  afterEvaluate {
    if (p.hasProperty("android")) {
      p.android {
        compileOptions {
          sourceCompatibility JavaVersion.VERSION_17
          targetCompatibility JavaVersion.VERSION_17
        }
      }
    }

    p.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
      kotlinOptions { jvmTarget = "17" }
    }

    p.tasks.withType(JavaCompile).configureEach {
      sourceCompatibility = JavaVersion.VERSION_17
      targetCompatibility = JavaVersion.VERSION_17
    }
  }
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
