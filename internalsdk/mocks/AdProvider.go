// Code generated by mockery v2.46.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// AdProvider is an autogenerated mock type for the AdProvider type
type AdProvider struct {
	mock.Mock
}

// GetInterstitialZoneID provides a mock function with given fields:
func (_m *AdProvider) GetInterstitialZoneID() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetInterstitialZoneID")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetNativeBannerZoneID provides a mock function with given fields:
func (_m *AdProvider) GetNativeBannerZoneID() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetNativeBannerZoneID")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetStandardBannerZoneID provides a mock function with given fields:
func (_m *AdProvider) GetStandardBannerZoneID() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetStandardBannerZoneID")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ShouldShowAd provides a mock function with given fields:
func (_m *AdProvider) ShouldShowAd() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ShouldShowAd")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewAdProvider creates a new instance of AdProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAdProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *AdProvider {
	mock := &AdProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
