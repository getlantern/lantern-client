// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ClientSession is an autogenerated mock type for the ClientSession type
type ClientSession struct {
	mock.Mock
}

// GetDeviceID provides a mock function with given fields:
func (_m *ClientSession) GetDeviceID() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetDeviceID")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetToken provides a mock function with given fields:
func (_m *ClientSession) GetToken() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetToken")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetUserFirstVisit provides a mock function with given fields:
func (_m *ClientSession) GetUserFirstVisit() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetUserFirstVisit")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// GetUserID provides a mock function with given fields:
func (_m *ClientSession) GetUserID() int64 {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetUserID")
	}

	var r0 int64
	if rf, ok := ret.Get(0).(func() int64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// Locale provides a mock function with given fields:
func (_m *ClientSession) Locale() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Locale")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// SetExpiration provides a mock function with given fields: _a0
func (_m *ClientSession) SetExpiration(_a0 int64) {
	_m.Called(_a0)
}

// SetProUser provides a mock function with given fields: _a0
func (_m *ClientSession) SetProUser(_a0 bool) {
	_m.Called(_a0)
}

// SetReferralCode provides a mock function with given fields: _a0
func (_m *ClientSession) SetReferralCode(_a0 string) {
	_m.Called(_a0)
}

// SetUserIDAndToken provides a mock function with given fields: _a0, _a1
func (_m *ClientSession) SetUserIDAndToken(_a0 int64, _a1 string) {
	_m.Called(_a0, _a1)
}

// NewClientSession creates a new instance of ClientSession. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewClientSession(t interface {
	mock.TestingT
	Cleanup(func())
}) *ClientSession {
	mock := &ClientSession{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
